a29  
modulos

lib math
import math

math.sqrt(36)//raiz 
math.sin(45) //seno
math.cos(45) // coseno
math.log(1000,10) //logaritimo
math.log(32,2) 
math.log(1000)
math.e //euller
math.pi //Pi

lib datetime
import datetime
dir(datetime) --recursos 
datetime.date.today() //dia 
datetime.date.now() //agora
data = datetime.date(2020,7,10)
data
data.day // dia 
data.month // mes
data.year // ano 

horario = datetime.datetime(2020,7,10, 7, 30, 0)
horario
horario.hour //hora 
horario.minute // minuto
horario.second // segundos


a30
lib random 
import random
random.random() //gerando numeros aleatorios
random.randint(1,10) // gerando numeros inteiros aleatorios
random.randrange(0,10,2) // intervalo range
random.randrange(0,10,3) // range 
x = ['k','d',13,'34-j','x'] // lista
x
random.choice(x) //sortear os elementos de uma lista

lib time 
import time as tm
tm.time() //valor do tempo
antes = tm.time() // tempo atual 
lista = []
for i in range(0,1000):
    lista.append(i)
depois = tm.time()

intervalo = depois - antes // tempo de exec 
print(f'Tempo: {intervalo} 'segundos') 

print('Finalizando')
tm.sleep(2) //esperando o tempo 
print('..')
tm.sleep(2) // esperando o tempo 
print('Ate a proxima')

a31 2310
salva arquivo, pacote util 
colamos as funcoes

def soma(a,b,c):
    somatorio = a+b+b
    return somatorio

def mult(a,b,c):
    produto = a*b*c
    return produto

def isPalindromo(string)
    if string == string[::-1]:
        return True
    else:
        return False

em modulos 
carregamos no jupyter ou no colab
carregamos o arq e teremos o arquivo no diretorio
depois importamos o util

import util as ut //que é o modulo que criamos
ut.soma(1,2,3) // modulo import e func soma
ut.mult(3,2,2) // mod e func mult 
ut.isPalindromo('abc') // mod e func isPalindromo
ut.isPalindromo('abccba')
t = 'abccba'
t[::-1] // slice de traz p frente 
t1 = 'abc'
t1[::-1] 

//incluimos essa funcao no util e temos que importar novamente
def divisao(a,b): 
    return a/b

temos que reinicializar o ambiente para importar novamente

a34-210121

Tratamento de erros e exceções
NameError: variável nao foi definida
- TypeError: tipos de dados incompatíveis
- RuntimeError: erro de execução
- SyntaxError: sintaxe digitada é inválida e não reconhecida pelo interpretador
- ZeroDivisionError: divisão por zero
- IndexError: índice está fora da coleção


c = [1,2,3,4,5]
c[5] # Index error

Tratamento de erros 
try:
    n = int(input('Digite um numero inteito:'))
    colocar letrar #ValueError
except:
    print('Valor inválido')
else:
    print(f'Valor digitado é {n}')

while True:
    try:
        n = int(input('Digite um numero inteito:'))
        colocar letrar #ValueError
    except:
        print('Valor inválido')
    else:
        print(f'Valor digitado é {n}')

while True:
    try:
        n = int(input('Digite um numero inteito:'))
        colocar letrar #ValueError
    except:
        print('Valor inválido')
    else:
        print(f'Valor digitado é {n}')
        break 

while True:
    try:
        p = int(input('Digite um numero inteiro:'))
        colocar letrar #ValueError
    except ValueError:
        print('Valor inválido')
    except KeyboardInterrupt:
        print('Usuário interrompeu a execução')
        break
    else:
        print(f'Valor digitado é {p}')
        break 




